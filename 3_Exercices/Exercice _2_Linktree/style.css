* {
    margin:0;
    padding: 0;
    box-sizing: border-box;
}

body {
    min-height:100vh;
    display: flex; /* pour rendre le body flexible et que les éléments à l'intérieur puisse bouger */
}

.smartphone-view {
    flex-grow : 1; /* Ici la vh est de 100%, donc la smartphone-view prendra 100% de l'espace du body restant (ici tout l'espace vu qu'elle est toute seule dans le body)*/
    font-family: 'Montserrat';
    font-weight: 350;
    font-size: 1rem;
    display:flex;
    flex-direction: column;
    align-items:center;
    gap : 2rem;
    min-width:100vw;
    background-image: url("images/devin-h-LvH0rN_cPdA-unsplash.jpg") ;
    /* 5F0F40 9A031E FB8B24 E36414 0F4C5C 
    OU
        585123 EEC170 F2A65A F58549 772F1A */
    background-size: cover; 
}

h1 {
    text-align: center;
    font-family: "Limelight", sans-serif;
    font-weight: 300;
}

header {
    width:80%;
    color:#772F1A;
    background-color: #EEC170;
    border-radius: 20px;
    padding:25px;
    margin-top: 3rem;
    display:flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap:20px;
    text-align: center;
}

.reseaux {
    display:flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: start;
    width:100%;
}

main {
    width:80%;
    
    flex-grow: 1;
    /** flex-grow: 1 = demander à l'élément de prendre 100% de l'espace QUI LUI RESTE dans sa flex-box, en tenant compte de l'espace pris par ses éléments frères.
    /** =/= height:100% = demander à l'élément de prendre 100% de l'espace de la flex-box, même si il y a d'autres éléments frères dans la box ! */
}

.boutons {
    font-weight: 50;
    height: 100%;
    /** comme on n'a pas d'autre élément que boutons dans la flex-box main, on peut mettre height:100%, mais on mettrait flex-grox:1 si on avait d'autres éléments. */

    display:flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    gap: 0.7rem;
    
    margin:auto;
}

.lien {
    padding:15px;
    width: 90%;
    border-radius: 50px;
    font-weight: 400;
    text-decoration: none;
    text-align: center;   
}

.lien1 {
    background-color: #585123;
    color:#EEC170;
    animation-name: animLien1;
    animation-duration: 0.5s;
    animation-delay: 0.5s;
}

@keyframes animLien1 {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
}

.lien2 {
    background-color: #EEC170;
    color:#585123;
    animation-name: animLien2;
    animation-duration: 0.5s;
    animation-delay: 1s;
}

@keyframes animLien2 {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
}

.lien3 {
    background-color: #F2A65A;
    color:#772F1A;
    animation-name: animLien3;
    animation-duration: 0.5s;
    animation-delay: 1.5s;
}

@keyframes animLien3 {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
}

.lien4 {
    background-color: #F58549;
    color:#772F1A;
    animation-name: animLien4;
    animation-duration: 0.5s;
    animation-delay: 2s;
}

@keyframes animLien4 {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
}

.lien5 {
    background-color: #772F1A;
    color:#EEC170;
    animation-name: animLien5;
    animation-duration: 0.5s;
    animation-delay: 2.5s;
}

@keyframes animLien5 {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0%);
    }
}

footer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: start;
}

i {
    font-size: 30px;
    color:#772F1A ;
}

i:hover {
    color:#585123;
}



